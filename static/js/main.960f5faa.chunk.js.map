{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/Dashboard.module.css","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Balance/Balance.js","components/Dashboard/Controls/Controls.js","components/Dashboard/Dashboard.js","container/App.js","index.js","components/Dashboard/Balance/Balance.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css"],"names":["module","exports","controls","button","input","dashboard","TransactionHistory","_ref","history","react_default","a","createElement","className","styles","map","item","key","id","type","concat","amount","date","Balance","balance","green","reduce","acc","Number","red","Controls","handleDepositClick","Date","document","getElementById","value","alert","newTransaction","v4","toLocaleString","_this","props","onDepositClick","handleWithdrawClick","onWithdrawalClick","onClick","this","name","Component","Dashboard","state","JSON","parse","localStorage","getItem","componentDidUpdate","setItem","stringify","addDepositTransaction","_this$state","setState","Object","toConsumableArray","addWithdrawalTransaction","_this$state2","_this$state3","Dashboard_Controls_Controls","Dashboard_Balance_Balance","Dashboard_TransactionHistory_TransactionHistory","App","Fragment","components_Dashboard_Dashboard","ReactDOM","render","container_App"],"mappings":"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","file":"static/js/main.960f5faa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1eFFD\",\"button\":\"Controls_button__3tGS6\",\"input\":\"Controls_input__lXEtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__26tfj\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ history }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th> Transaction </th> <th> Amount </th> <th> Date </th>{' '}\n      </tr>{' '}\n    </thead>{' '}\n    <tbody>\n      {' '}\n      {history.map(item => (\n        <tr key={item.id}>\n          <td className={styles.type}> {item.type} </td>{' '}\n          <td> {`${item.amount} $`} </td> <td> {item.date} </td>{' '}\n        </tr>\n      ))}{' '}\n    </tbody>{' '}\n  </table>\n);\nTransactionHistory.propTypes = {\n  history: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, history }) => (\n  <section className={styles.balance}>\n    <span>\n      <span className={styles.green}> ⬆ </span>{' '}\n      {history.reduce((acc, item) => {\n        if (item.type === 'deposit') {\n          acc = Number(acc) + Number(item.amount);\n        }\n        return acc;\n      }, 0)}{' '}\n      {' $'}{' '}\n    </span>{' '}\n    <span>\n      {' '}\n      <span className={styles.red}> ⬇ </span>{' '}\n      {history.reduce((acc, item) => {\n        if (item.type === 'withdrawal') {\n          acc = Number(acc) + Number(item.amount);\n        }\n        return acc;\n      }, 0)}{' '}\n      {' $'}{' '}\n    </span>{' '}\n    <span>\n      {' '}\n      Balance: {balance}\n      .00 ${' '}\n    </span>{' '}\n  </section>\n);\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  history: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Balance;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport v4 from 'uuid';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  static propTypes = {\n    balance: PropTypes.number.isRequired,\n    onDepositClick: PropTypes.func.isRequired,\n    onWithdrawalClick: PropTypes.func.isRequired,\n  };\n\n  handleDepositClick = () => {\n    const date = new Date();\n    const input = document.getElementById('input');\n    if (Number(input.value) <= 0) {\n      // eslint-disable-next-line no-alert\n      alert('Введите корректную сумму для проведения операции!');\n    } else {\n      const newTransaction = {\n        id: v4(),\n        type: 'deposit',\n        amount: Number(input.value),\n        date: date.toLocaleString(),\n      };\n      this.props.onDepositClick(newTransaction);\n      input.value = null;\n    }\n  };\n\n  handleWithdrawClick = () => {\n    const date = new Date();\n    const input = document.getElementById('input');\n    if (Number(input.value) > this.props.balance) {\n      // eslint-disable-next-line no-alert\n      alert('На счету недостаточно средств для проведения операции!');\n    } else if (Number(input.value) <= 0) {\n      // eslint-disable-next-line no-alert\n      alert('Введите корректную сумму для проведения операции!');\n    } else {\n      const newTransaction = {\n        id: v4(),\n        type: 'withdrawal',\n        amount: Number(input.value),\n        date: date.toLocaleString(),\n      };\n      this.props.onWithdrawalClick(newTransaction);\n      input.value = null;\n    }\n  };\n\n  render() {\n    return (\n      <section className={styles.controls}>\n        <input type=\"number\" id=\"input\" className={styles.input} />{' '}\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={this.handleDepositClick}\n        >\n          {' '}\n          Deposit{' '}\n        </button>{' '}\n        <button\n          type=\"button\"\n          name=\"withdrawal\"\n          className={styles.button}\n          onClick={this.handleWithdrawClick}\n        >\n          {' '}\n          Withdraw{' '}\n        </button>{' '}\n      </section>\n    );\n  }\n}\nexport default Controls;\n","import React, { Component } from 'react';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport styles from './Dashboard.module.css';\n\nclass Dashboard extends Component {\n  state = {\n    balance: JSON.parse(localStorage.getItem('balance')) || 0,\n    history: JSON.parse(localStorage.getItem('history')) || [],\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem('balance', JSON.stringify(this.state.balance));\n    localStorage.setItem('history', JSON.stringify(this.state.history));\n  };\n\n  addDepositTransaction = item => {\n    const { history, balance } = this.state;\n    this.setState({\n      balance: balance + item.amount,\n      history: [...history, item],\n    });\n  };\n\n  addWithdrawalTransaction = item => {\n    const { history, balance } = this.state;\n    this.setState({\n      balance: balance - item.amount,\n      history: [...history, item],\n    });\n  };\n\n  render() {\n    const { balance, history } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          balance={balance}\n          onDepositClick={this.addDepositTransaction}\n          onWithdrawalClick={this.addWithdrawalTransaction}\n        />{' '}\n        <Balance balance={balance} history={history} />{' '}\n        <TransactionHistory history={history} />{' '}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2MQtp\",\"green\":\"Balance_green__2Goq_\",\"red\":\"Balance_red__3yItN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__29n1Z\",\"type\":\"TransactionHistory_type__1-0mf\"};"],"sourceRoot":""}